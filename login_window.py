# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'hogwarts_diploma_login_ui.ui'
#
# Created by: PyQt5 UI code generator 5.15.10
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_login_window(object):
    def setupUi(self, login_window):
        login_window.setObjectName("login_window")
        login_window.setEnabled(True)
        login_window.resize(800, 600)
        self.centralwidget = QtWidgets.QWidget(login_window)
        self.centralwidget.setObjectName("centralwidget")
        self.hogwarts_logo_label = QtWidgets.QLabel(self.centralwidget)
        self.hogwarts_logo_label.setGeometry(QtCore.QRect(280, 30, 240, 320))
        self.hogwarts_logo_label.setText("")
        self.hogwarts_logo_label.setPixmap(QtGui.QPixmap("assets/hogwarts_school_logo.png"))
        self.hogwarts_logo_label.setScaledContents(True)
        self.hogwarts_logo_label.setObjectName("hogwarts_logo_label")
        self.login_group = QtWidgets.QGroupBox(self.centralwidget)
        self.login_group.setGeometry(QtCore.QRect(170, 380, 450, 160))
        font = QtGui.QFont()
        font.setFamily("Harry P")
        font.setPointSize(20)
        self.login_group.setFont(font)
        self.login_group.setAlignment(QtCore.Qt.AlignCenter)
        self.login_group.setCheckable(False)
        self.login_group.setObjectName("login_group")
        self.label_headmaster = QtWidgets.QLabel(self.login_group)
        self.label_headmaster.setGeometry(QtCore.QRect(40, 40, 90, 40))
        font = QtGui.QFont()
        font.setFamily("Harry P")
        font.setPointSize(16)
        self.label_headmaster.setFont(font)
        self.label_headmaster.setObjectName("label_headmaster")
        self.label_password = QtWidgets.QLabel(self.login_group)
        self.label_password.setGeometry(QtCore.QRect(40, 100, 90, 40))
        font = QtGui.QFont()
        font.setFamily("Harry P")
        font.setPointSize(16)
        self.label_password.setFont(font)
        self.label_password.setObjectName("label_password")
        self.comboBox_headmaster = QtWidgets.QComboBox(self.login_group)
        self.comboBox_headmaster.setGeometry(QtCore.QRect(170, 50, 191, 22))
        font = QtGui.QFont()
        font.setFamily("Harry P")
        font.setPointSize(16)
        self.comboBox_headmaster.setFont(font)
        self.comboBox_headmaster.setObjectName("comboBox_headmaster")
        self.comboBox_headmaster.addItem("")
        self.comboBox_headmaster.addItem("")
        self.comboBox_headmaster.addItem("")
        self.lineEdit_password = QtWidgets.QLineEdit(self.login_group)
        self.lineEdit_password.setEchoMode(QtWidgets.QLineEdit.Password)
        self.lineEdit_password.setGeometry(QtCore.QRect(145, 110, 113, 20))
        font = QtGui.QFont()
        font.setFamily("Harry P")
        font.setPointSize(16)
        self.lineEdit_password.setFont(font)
        self.lineEdit_password.setCursor(QtGui.QCursor(QtCore.Qt.CrossCursor))
        self.lineEdit_password.setObjectName("lineEdit_password")
        self.btn_login = QtWidgets.QPushButton(self.login_group)
        self.btn_login.setGeometry(QtCore.QRect(320, 105, 91, 31))
        font = QtGui.QFont()
        font.setFamily("Harry P")
        font.setPointSize(16)
        self.btn_login.setFont(font)
        self.btn_login.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.btn_login.setIconSize(QtCore.QSize(16, 16))
        self.btn_login.setObjectName("btn_login")
        login_window.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(login_window)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 21))
        self.menubar.setObjectName("menubar")
        login_window.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(login_window)
        self.statusbar.setObjectName("statusbar")
        login_window.setStatusBar(self.statusbar)

        self.retranslateUi(login_window)
        QtCore.QMetaObject.connectSlotsByName(login_window)

    def retranslateUi(self, login_window):
        _translate = QtCore.QCoreApplication.translate
        login_window.setWindowTitle(_translate("login_window", "Hogwarts Login"))
        self.login_group.setTitle(_translate("login_window", "Welcome to Hogwarts Diploma Creator"))
        self.label_headmaster.setText(_translate("login_window", "Headmaster: "))
        self.label_password.setText(_translate("login_window", "Password: "))
        self.comboBox_headmaster.setItemText(0, _translate("login_window", "Albus Dumbledore"))
        self.comboBox_headmaster.setItemText(1, _translate("login_window", "Minerva Mcgonagall"))
        self.comboBox_headmaster.setItemText(2, _translate("login_window", "Severus Snape"))
        self.btn_login.setText(_translate("login_window", "Login"))


class LoginWindow(QtWidgets.QMainWindow, Ui_login_window):
    # Define a signal to notify the main app of successful login
    login_success = QtCore.pyqtSignal(str)

    def __init__(self):
        super().__init__()
        self.setupUi(self)

        # Connects the login button to the authentication method
        self.btn_login.clicked.connect(self.authenticate_user)

        # Stores valid credentials (can be fetched from a database)
        self.credentials = {
            "Albus Dumbledore": "AlomoharaThis!",
            "Minerva Mcgonagall": "Felis_Animagus",
            "Severus Snape": "Lilly_Evans",
        }

    def authenticate_user(self):
        # Get the selected headmaster and entered password
        headmaster = self.comboBox_headmaster.currentText()
        password = self.lineEdit_password.text()

        # Check if the credentials are valid
        if headmaster in self.credentials and self.credentials[headmaster] == password:
            QtWidgets.QMessageBox.information(self, "Login Successful", f"Welcome, {headmaster}!")
            # Success signal point
            self.login_success.emit(headmaster)
            self.close()
        else:
            QtWidgets.QMessageBox.warning(self, "Login Failed", "Invalid headmaster or password. Please try again.")
            self.lineEdit_password.clear()